#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  base, winga, wingb, thrusta1, thrusta2;

static-var  desiredState, stateChanging;

lua_UnitStoppedMoving()
{ 
 	return 0; 
}
 
lua_UnitStartedMoving() 
{ 
	return 0; 
}

activatescr()
{
	turn winga to z-axis <0.000000> now;
	turn winga to z-axis <-90.137363> speed <61.868132>;
	turn wingb to z-axis <0.000000> now;
	turn wingb to z-axis <90.137363> speed <61.868132>;
	sleep 1457;
}

deactivatescr()
{
	turn winga to z-axis <-90.137363> now;
	turn winga to z-axis <0.000000> speed <61.945055>;
	turn wingb to z-axis <90.137363> now;
	turn wingb to z-axis <0.000000> speed <61.945055>;
	sleep 1455;
}

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 500;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 258;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 257;
			}
			emit-sfx smoketype from base;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

RequestState(requestedstate, currentstate)
{
	if( stateChanging )
	{
		desiredState = requestedstate;
		return (0);
	}
	stateChanging = 1;
	currentstate = desiredState;
	desiredState = requestedstate;
	while( desiredState != currentstate )
	{
		if( desiredState )
		{
			call-script deactivatescr();
			currentstate = 1;
		}
		else
		{
			call-script activatescr();
			currentstate = 0;
		}
	}
	stateChanging = 0;
}

Create()
{
	desiredState = 1;
	stateChanging = 0;
	start-script SmokeUnit();
}

Activate()
{
	start-script RequestState(0);
	call-script lua_UnitStartedMoving();
}

Deactivate()
{
	call-script lua_UnitStoppedMoving();
	start-script RequestState(1);
}

StartBuilding()
{
	set INBUILDSTANCE to 1;
}

StopBuilding()
{
	set INBUILDSTANCE to 0;
}

QueryNanoPiece(piecenum)
{
	piecenum = base;
}

SweetSpot(piecenum)
{
	piecenum = base;
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode base type BITMAPONLY | BITMAP1;
		explode thrusta1 type BITMAPONLY | BITMAP1;
		explode thrusta2 type BITMAPONLY | BITMAP2;
		explode winga type BITMAPONLY | BITMAP5;
		explode wingb type BITMAPONLY | BITMAP1;
		return (0);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode base type BITMAPONLY | BITMAP1;
		explode thrusta1 type FALL | BITMAP1;
		explode thrusta2 type FALL | BITMAP2;
		explode winga type SHATTER | BITMAP5;
		explode wingb type BITMAPONLY | BITMAP1;
		return (0);
	}
	if( severity <= 99 )
	{
		corpsetype = 3;
		explode base type BITMAPONLY | BITMAP1;
		explode thrusta1 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		explode thrusta2 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		explode winga type SHATTER | BITMAP5;
		explode wingb type BITMAPONLY | BITMAP1;
		return (0);
	}
	corpsetype = 3;
	explode base type BITMAPONLY | BITMAP1;
	explode thrusta1 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	explode thrusta2 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	explode winga type SHATTER | EXPLODE_ON_HIT | BITMAP5;
	explode wingb type BITMAPONLY | BITMAP1;
}
