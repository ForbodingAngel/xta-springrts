#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  base, smoke1, smoke2, spinner, glow;

static-var pipe;

Standby()
{
	while( TRUE )
	{
		emit-sfx UNIT_SFX1 from glow;
		if (pipe)
		{
			emit-sfx SFXTYPE_WHITESMOKE from smoke1;
		}
		if (!pipe)
		{
			emit-sfx SFXTYPE_WHITESMOKE from smoke2;
		}
		pipe = !pipe;
		sleep 450;
	}
}

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	start-script Standby();
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from base;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

Create()
{
	pipe = 0;
	start-script SmokeUnit();
}

SweetSpot(piecenum)
{
	piecenum = base;
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode base type BITMAPONLY | BITMAP1;
		explode smoke1 type BITMAPONLY | BITMAP2;
		explode smoke2 type BITMAPONLY | BITMAP2;
		explode spinner type BITMAPONLY | BITMAP2;
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode base type BITMAPONLY | BITMAP1;
		explode smoke1 type FALL | BITMAP2;
		explode smoke2 type FALL | BITMAP2;
		explode spinner type BITMAPONLY | BITMAP2;
		return (0);
	}
	if( severity <= 99 )
	{
		corpsetype = 3;
		explode base type BITMAPONLY | BITMAP1;
		explode smoke1 type FALL | BITMAP2;
		explode smoke2 type FALL | BITMAP2;
		explode spinner type SHATTER | BITMAP2;
		return (0);
	}
	corpsetype = 3;
	explode base type BITMAPONLY | BITMAP1;
	explode smoke1 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	explode smoke2 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	explode spinner type SHATTER | EXPLODE_ON_HIT | BITMAP2;
}
